  [1]   ASP.NET CORE 이메일보내기 
        ## using System.Net.Mail;
  
        MailMessage mail = new MailMessage();
        
        try
        {
                // 보내는 사람 메일, 이름, 인코딩(UTF-8)
                mail.From = new MailAddress("man4h@naver.com", "David J", System.Text.Encoding.UTF8);
                // 받는 사람 메일
                mail.To.Add("david.myoungho.jung@gmail.com");
                // 참조 사람 메일
                //mail.CC.Add("nowonbun@gmail.com");
                // 비공개 참조 사람 메일
                //mail.Bcc.Add("nowonbun@gmail.com");
                // 메일 제목
                mail.Subject = "그동안 수고하셨습니다";
                // 본문 내용
                mail.Body = "<html><body>hello wrold</body></html>";
                // 본문 내용 포멧의 타입 (true의 경우 Html 포멧으로)
                mail.IsBodyHtml = true;
                // 메일 제목과 본문의 인코딩 타입(UTF-8)
                mail.SubjectEncoding = System.Text.Encoding.UTF8;
                mail.BodyEncoding = System.Text.Encoding.UTF8;
                // 첨부 파일 (Stream과 파일 이름)
                mail.Attachments.Add(new Attachment(new FileStream(@"C:\TEST\1.pdf", FileMode.Open, FileAccess.Read), "1.pdf"));
                
                //mail.Attachments.Add(new Attachment(new FileStream(@"D:\test2.zip", FileMode.Open, FileAccess.Read), "test2.zip"));
                // smtp 서버 주소
                SmtpClient SmtpServer = new SmtpClient("smtp.naver.com");
                // smtp 포트
                SmtpServer.Port = 587;
                // smtp 인증
                SmtpServer.Credentials = new System.Net.NetworkCredential("man4h", "make33298230");
                // SSL 사용 여부
                SmtpServer.EnableSsl = true;
                // 발송
                SmtpServer.Send(mail);
        }
        finally
        {
                // 첨부 파일 Stream 닫기
                foreach (var attach in mail.Attachments)
                {
                    attach.ContentStream.Close();
                }
        }

 [2] 사용예제
                //로컬 Server에 카피한 pdf파일을 이메일로 전송한다
                String mailBody = "[RESEND] Please, contact us immediately if you are unable to detach or download your payslip.<br/> Thank you.";
                                
                SendEmailModel sendParam = new SendEmailModel()
                {
                    subject              = pModel.companyName,
                    body                 = mailBody,
                    receiverEmailAddress = "man4h@naver.com", //param.emailAddress;    // param.emailAddress                        
                    senderEmailAddress   = senderEmailString.SenderMailAddress,
                    smtp                 = senderEmailString.SenderMailSmtpServer,
                    smtpPort             = Convert.ToInt32(senderEmailString.SenderMailSmtpPort),
                    senderId             = senderEmailString.SenderMailId,
                    serderPassWord       = senderEmailString.SenderMailPassWord,
                    senderName           = senderEmailString.SenderName,
                    replyEmailAddress    = "man4h@naver.com" // param.ccEmailAddress;
                };

                //첨부파일
                List<SendEmailModel> fileParams = new List<SendEmailModel>();
                SendEmailModel fileParam = new SendEmailModel();
                fileParam.attachmentFileName = downFolderName + pModel.empId + ".pdf";
                fileParams.Add(fileParam);

                //CC Mail Address :  보낼때는 CC 처리하지 않음
                List<SendEmailModel> ccParams = new List<SendEmailModel>();

                EmailServices email = new EmailServices();

                ReturnViewModel retViewModel = email.sendEmail(sendParam, fileParams, ccParams);

        public ReturnViewModel sendEmail(SendEmailModel pModel, List<SendEmailModel> pFile, List<SendEmailModel> pCCMail)
        {
          
            MailMessage mail = new MailMessage();

            // Mail Object 초기화
            mail.From = new MailAddress(pModel.senderEmailAddress, pModel.senderName, System.Text.Encoding.UTF8);                                               
            
            //메일 Parameter 세팅
            mail.Subject = pModel.subject;                        
            mail.Body = "<html><body>"+ pModel.body + "</body></html>";                        
            mail.IsBodyHtml = true;                        
            mail.SubjectEncoding = System.Text.Encoding.UTF8;
            mail.BodyEncoding = System.Text.Encoding.UTF8;

            //받는사람 
            mail.To.Add(pModel.receiverEmailAddress);

            //첨부파일
            for (int i=0; i < pFile.Count; i++)
            {
                mail.Attachments.Add(new Attachment(new FileStream(pFile[i].attachmentFileName, FileMode.Open, FileAccess.Read), pFile[i].attachmentFileName));
            }

            //CC목록
            for (int k=0; k < pCCMail.Count; k++)
            {
                mail.CC.Add(pCCMail[k].ccEmailAddress);                
            }

            //Reply
            if (pModel.replyEmailAddress.Length > 0)
            {
                mail.ReplyToList.Add(pModel.replyEmailAddress);
            }

            //mail.Bcc.Add("nowonbun@gmail.com");

            //smtp Server Address
            //SmtpClient SmtpServer = new SmtpClient("smtp.naver.com");
            SmtpClient SmtpServer = new SmtpClient(pModel.smtp);
           
            // smtp post
            SmtpServer.Port = pModel.smtpPort;

            // smtp Credential            
            SmtpServer.Credentials = new System.Net.NetworkCredential(pModel.senderId, pModel.serderPassWord);

            // SSL use yn
            SmtpServer.EnableSsl = true;

            try
            {
                // mail send...
                SmtpServer.Send(mail);
            } catch (Exception ex)
            {                
                return new ReturnViewModel { errorCode = "E", errorMessage = ex.Message };
            } finally
            {
                SmtpServer.Dispose();
                mail.Dispose();  //Dispose()를 안해줄경우 반복 처리시 오류가 발생한다
            }
          
            return new ReturnViewModel { errorCode = "S", errorMessage = "" };

        }